(function($){'use strict';TxDMV.Lpot.MyPlates.Web.Views.MessageEditorController=function(applicationController){var options;var $me;var $message;var $img;var $svg;var $price;var $plateName;var $plateDescription;var $submit;var $orderButton;var $availabilityStatus;var $messageNotAvailableInfoBox;var _message;var _messageCharacterLength;var _messageByteCount;var _plate;var _plateInformationLookup={};var messageHelper=TxDMV.Lpot.MyPlates.Web.Services.messageHelper;var plateHelper=TxDMV.Lpot.MyPlates.Web.Services.plateHelper;function bind(bindOptions){options=bindOptions;setReferences();addHandlers();setMessageVariables(options.message);$message.val(_message);}
function bindPlate(plate,backgroundOnly){if(!plate){console.log('onPlateSelected plate not found');return;}
if(_plate&&_plate.plateCode===plate.plateCode)return;_plate=plate;renderPlateDependentElements(backgroundOnly);renderMessageDependentElements(backgroundOnly);setUiState();prefetchPopupInformation();}
function renderPlateDependentElements(backgroundOnly){var onImageLoadErrorHandler='this.onerror=null;this.src=\''+options.imageRootUrl+options.blankImageFileName+'\';';$img.attr('src',options.imageRootUrl+_plate.template);$img.attr('alt',_plate.name);$img.attr('onerror',onImageLoadErrorHandler);$plateName.text(_plate.family.name);$plateDescription.text(getPlateDescription(backgroundOnly));$price.attr('title',plateHelper.getPricingText(_plate,backgroundOnly));$orderButton.text(plateHelper.getOrderButtonText(_plate.categoryId));}
function renderMessageDependentElements(backgroundOnly){renderMessage(backgroundOnly);$price.html('$'+plateHelper.getMinimumAnnualPriceForLongestTerm(_plate,_messageCharacterLength,backgroundOnly)+'/year<sup>*</sup>');}
function renderMessage(backgroundOnly){var message=(backgroundOnly)?'':_message;options.plateRenderingService.drawMessage($svg,_plate.family.id,_plate.vehicleTypeId,message);}
function getPlateDescription(backgroundOnly){if(backgroundOnly)return'';return'Up to '+_plate.maxCharacterLength+' characters';}
function setUiState(){var setSymbolBarState=function(){var isEnabled=(_messageByteCount<_plate.maxByteCount);var action=(isEnabled)?'removeClass':'addClass';$me.find('.symbols-wrapper .symbols')[action]('disabled');};var setWarningState=function(){if(_messageByteCount>_plate.vehicleTypeMaxByteCount)setAvailabilityStatus(false,'Plate supports a maximum of '+_plate.vehicleTypeMaxByteCount+' characters and symbols');if(_messageCharacterLength>_plate.vehicleTypeMaxCharacterLength)setAvailabilityStatus(false,'Plate supports a maximum of '+_plate.vehicleTypeMaxCharacterLength+' letters and numbers');if(_messageCharacterLength<_plate.vehicleTypeMinCharacterLength)setAvailabilityStatus(false,'Message must have at least '+_plate.vehicleTypeMinCharacterLength+((_plate.vehicleTypeMinCharacterLength==1)?' letter or number':' letters and numbers'));};setSymbolBarState();if(_messageCharacterLength>0)setWarningState();}
function setReferences(){$me=options.$container;$message=$me.find('#message');var $plate=$me.find('.plate-wrapper');$img=$plate.find('img');$svg=$plate.find('svg')[0];$price=$me.find('.price');$plateName=$me.find('.plate-name');$plateDescription=$me.find('.plate-description');$submit=$me.find('.form-submit');$orderButton=$me.find('.button-order');$availabilityStatus=$me.find('.message-status');$messageNotAvailableInfoBox=$('.create-a-plate-view .message-not-available-info');}
function setMessageVariables(message){_message=message.toUpperCase();_messageByteCount=messageHelper.getByteCount(_message);_messageCharacterLength=messageHelper.getCharacterLength(_message);}
function addHandlers(){addMessageHandling();addKeyPressHandling();addSymbolHandling();addSubmitHandling();addInfoClickHandling();addMessageNotAvailableInfoCloseClickHandling();}
function addInfoClickHandling(){var onClick=function($target){var action=($target.hasClass('button-close'))?'hide':'show';if(action=='show')onPlateInformationClick();$me.find('.modal-info')[action]();};applicationController.on($me,'click','.button-close',onClick);applicationController.on($me,'click','.button-plate-information',onClick);}
function addMessageNotAvailableInfoCloseClickHandling(){var onClick=function(){$messageNotAvailableInfoBox.removeClass('active');};applicationController.on($('.message-not-available-info'),'click','.close button',onClick);}
function addSubmitHandling(){applicationController.on($me,'click','.form-submit',onSubmitClick);}
function addMessageHandling(){var onChange=function(){var value=$message.val().trim().toUpperCase();if(value===_message)return;setMessageVariables(value);clearAvailabilityMessage();renderMessageDependentElements();setUiState();raiseMessageChanged();};$message.on('input',onChange);}
function addSymbolHandling(){var onClick=function($target){var symbol=getSymbol($target);insertSymbol(symbol);$message.trigger('input');};var insertSymbol=function(symbol){var text;var old=$message.val();var cursorPos=$message[0].selectionStart;if(cursorPos===0){text=symbol+old;}
else if(cursorPos===(old.length-1)){text=old+symbol;}
else{text=old.slice(0,cursorPos)+symbol+old.slice(cursorPos);}
$message.val(text);$message.focus();$message[0].setSelectionRange(cursorPos+1,cursorPos+1);};var getSymbol=function($target){var symbol=$target.attr('data-symbol');if(symbol==='at')return'@';if(symbol==='space')return' ';return symbol;};applicationController.on($me,'click','.symbols:not(.disabled) button',onClick);}
function addKeyPressHandling(){var onKeypress=function(event){var options={messageByteCount:_messageByteCount,messageCharacterLength:_messageCharacterLength,plateMaxByteCount:_plate.maxByteCount,plateMaxCharacterLength:_plate.maxCharacterLength};messageHelper.onKeypress(event,options,onSubmitClick);};$message.on('keypress',onKeypress);}
function onSubmitClick(){var indicateChecking=function(){enableButton(false);$availabilityStatus.text('');};var indicateAvailableStatus=function(isAvailable){setAvailabilityStatus(isAvailable);enableButton(true);};var enableButton=function(isEnabled){var text=(isEnabled)?'Check':'Checking . . .';var action=(isEnabled)?'removeClass':'addClass';$submit.val(text);$submit[action]('disabled');};var getUrl=function(){var values=options.getPlateParameters();var encodedMessage=encodeURI(values.message);return'/api/licenseplates/'+values.vehicleType+'/'+values.plateFamily+'/'+encodedMessage;};var onStatusRetrieved=function(data){var isAvailable=(data.status=='available');indicateAvailableStatus(isAvailable);if(options.onAvailabilityChanged)options.onAvailabilityChanged(isAvailable);};event.preventDefault();if($submit.hasClass('disabled'))return;if(_messageCharacterLength===0)return;indicateChecking();applicationController.ajaxGet(getUrl(),onStatusRetrieved);}
function onPlateInformationClick(){var $modal=$me.find('.modal-info');var $title=$modal.find('h2');var $plateImage=$modal.find('img');var $details=$modal.find('ul');var indicateChecking=function(){enableButton(false);$availabilityStatus.text('');};var initialize=function(){$details.empty();$plateImage.attr('src',options.imageRootUrl+_plate.template);$title.text(_plate.family.name);};var onInformationRetrieved=function(data){for(var i=0,len=data.details.length;i<len;i++){$details.append('<li>'+data.details[i]+'</li>');}};initialize();var url=getInformationUrl();var data=_plateInformationLookup[url];onInformationRetrieved(data);}
function prefetchPopupInformation(){var url=getInformationUrl();applicationController.ajaxGet(url,function(data){_plateInformationLookup[url]=data;});}
function getInformationUrl(){var values=options.getPlateParameters();return'/api/plates/'+values.vehicleType+'/'+values.plateFamily;}
function setAvailabilityStatus(isAvailable,text){if(!text)text=(isAvailable)?'Available':'Not Available';var cssClass=(isAvailable)?'available':'not-available';$availabilityStatus.text(text);$availabilityStatus.removeClass('available not-available');$availabilityStatus.addClass(cssClass);if(!isAvailable)$messageNotAvailableInfoBox.addClass('active');}
function clearAvailabilityMessage(){$availabilityStatus.text('');$availabilityStatus.removeClass('available not-available');$messageNotAvailableInfoBox.removeClass('active');}
function raiseMessageChanged(){if(!options.onMessageChanged)return;options.onMessageChanged({text:_message,byteCount:_messageByteCount,characterLength:_messageCharacterLength});}
return{bind:bind,onPlateSelected:bindPlate,raiseMessageChanged:raiseMessageChanged,checkAvailability:onSubmitClick};};}(jQuery));